--- rezound-0.7.0beta/src/frontend_fox/CRecordDialog.cpp.orig	2003-02-10 08:22:56.000000000 +0100
+++ rezound-0.7.0beta/src/frontend_fox/CRecordDialog.cpp	2003-05-10 09:15:25.000000000 +0200
@@ -215,7 +215,7 @@
 		waitingForThresholdLED->getFirst()->lower();
 
 	// schedule for the next status update
-	timerHandle=getApp()->addTimeout(STATUS_UPDATE_TIME,this,CRecordDialog::ID_STATUS_UPDATE);
+	timerHandle=getApp()->addTimeout(this,CRecordDialog::ID_STATUS_UPDATE,STATUS_UPDATE_TIME);
 	return 1;
 }
 
@@ -240,7 +240,7 @@
 	try
 	{
 		showing=true;
-		timerHandle=getApp()->addTimeout(STATUS_UPDATE_TIME,this,CRecordDialog::ID_STATUS_UPDATE);
+		timerHandle=getApp()->addTimeout(this,CRecordDialog::ID_STATUS_UPDATE,STATUS_UPDATE_TIME);
 
 		// ??? might wanna use rememberShow or some base method
 		if(execute(PLACEMENT_CURSOR) && recorder->getRecordedLength()>0)
--- rezound-0.7.0beta/src/frontend_fox/CSoundWindow.cpp.orig	2003-01-30 07:26:03.000000000 +0100
+++ rezound-0.7.0beta/src/frontend_fox/CSoundWindow.cpp	2003-05-10 09:15:25.000000000 +0200
@@ -116,7 +116,7 @@
 	CSoundWindow *that=(CSoundWindow *)Pthis;
 	// ??? this is called from another thread.. I don't know if it will cause a problem in FOX
 	if(that->timerHandle==NULL)
-		that->timerHandle=that->getApp()->addTimeout(DRAW_PLAY_POSITION_TIME,that,CSoundWindow::ID_DRAW_PLAY_POSITION);
+		that->timerHandle=that->getApp()->addTimeout(that,CSoundWindow::ID_DRAW_PLAY_POSITION,DRAW_PLAY_POSITION_TIME);
 }
 
 // ----------------------------------------------------------
@@ -537,7 +537,7 @@
 		// ??? I could make the calculation of the next event more intelligent
 		// 	- if the onscreen data is smaller I could register to get the timer faster 
 		// reregister to get this event again
-		timerHandle=getApp()->addTimeout(DRAW_PLAY_POSITION_TIME,this,ID_DRAW_PLAY_POSITION);
+		timerHandle=getApp()->addTimeout(this,ID_DRAW_PLAY_POSITION,DRAW_PLAY_POSITION_TIME);
 	}
 	else
 	{
--- rezound-0.7.0beta/src/frontend_fox/FXWaveScrollArea.cpp.orig	2003-01-03 04:38:49.000000000 +0100
+++ rezound-0.7.0beta/src/frontend_fox/FXWaveScrollArea.cpp	2003-05-10 09:15:25.000000000 +0200
@@ -329,7 +329,7 @@
 	{
 		if(!(ev->state&SHIFTMASK))
 		{
-			if(startAutoScroll(ev->win_x,ev->win_y))
+			if(startAutoScroll(ev))
 				return 1;
 		}
 	}
--- rezound-0.7.0beta/src/frontend_fox/CMetersWindow.cpp.orig	2003-02-08 20:08:59.000000000 +0100
+++ rezound-0.7.0beta/src/frontend_fox/CMetersWindow.cpp	2003-05-10 10:06:56.000000000 +0200
@@ -668,7 +668,7 @@
 
 
 	// schedule the first update meters event
-	timeout=getApp()->addTimeout(gMeterUpdateTime,this,ID_UPDATE_TIMEOUT);
+	timeout=getApp()->addTimeout(this,ID_UPDATE_TIMEOUT,gMeterUpdateTime);
 }
 
 CMetersWindow::~CMetersWindow()
@@ -719,7 +719,7 @@
 	}
 
 	// schedule another update again in METER_UPDATE_RATE milliseconds
-	timeout=getApp()->addTimeout(gMeterUpdateTime,this,ID_UPDATE_TIMEOUT);
+	timeout=getApp()->addTimeout(this,ID_UPDATE_TIMEOUT,gMeterUpdateTime);
 	return 0;
 }
 
