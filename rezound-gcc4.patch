--- rezound-0.12.2beta/src/misc/CNestedDataFile/CNestedDataFile.cpp.orig	2005-09-05 06:06:33.000000000 +0200
+++ rezound-0.12.2beta/src/misc/CNestedDataFile/CNestedDataFile.cpp	2006-12-30 23:26:23.815210407 +0100
@@ -45,8 +45,6 @@
 #include <CPath.h>
 
 
-extern int cfg_parse();
-
 CNestedDataFile *CNestedDataFile::parseTree;
 string CNestedDataFile::initialFilename;
 vector<string> CNestedDataFile::s2at_return_value;
--- rezound-0.12.2beta/src/misc/CNestedDataFile/anytype.h.orig	2005-02-06 05:00:35.000000000 +0100
+++ rezound-0.12.2beta/src/misc/CNestedDataFile/anytype.h	2006-12-30 23:26:18.730920670 +0100
@@ -93,6 +93,7 @@
 // I really wished that I didn't have to explicitly use 'vector' in the definition; I'd have like to use any container with an iterator interface
 #include <CMutex.h>
 #include <CNestedDataFile/CNestedDataFile.h>
+extern int cfg_parse();
 template<class Type> static const vector<Type> &string_to_anytype(const string &str,vector<Type> &ret)
 {
 	// This function has to parse '{' ..., ... '}' where the ... can contain nested array
--- rezound-0.12.2beta/src/frontend_fox/FileActionDialogs.h.orig	2005-02-06 06:28:20.000000000 +0100
+++ rezound-0.12.2beta/src/frontend_fox/FileActionDialogs.h	2006-12-31 01:10:51.012357619 +0100
@@ -87,7 +87,7 @@
 	long onDetectDeviceButton(FXObject *object,FXSelector sel,void *ptr);
 
 protected:
-	CBurnToCDDialog::CBurnToCDDialog() {}
+	CBurnToCDDialog() {}
 
 	const string getExplanation() const;
 };
@@ -111,7 +111,7 @@
 	long onRemoveButton(FXObject *object,FXSelector sel,void *ptr);
 
 protected:
-	CRunMacroDialog::CRunMacroDialog() {}
+	CRunMacroDialog() {}
 
 };
 
--- rezound-0.12.2beta/src/frontend_fox/CMetersWindow.cpp.orig	2005-01-24 07:52:45.000000000 +0100
+++ rezound-0.12.2beta/src/frontend_fox/CMetersWindow.cpp	2006-12-31 01:18:56.964050428 +0100
@@ -82,7 +82,7 @@
 {
 	FXDECLARE(CLevelMeter);
 public:
-	CLevelMeter::CLevelMeter(FXComposite *parent) :
+	CLevelMeter(FXComposite *parent) :
 		FXHorizontalFrame(parent,LAYOUT_FILL_X|LAYOUT_FIX_HEIGHT|LAYOUT_TOP | FRAME_NONE,0,0,0,0, 0,0,0,0, 0,0),
 		statusFont(getApp()->getNormalFont()),
 		canvas(new FXCanvas(this,this,ID_CANVAS,FRAME_NONE | LAYOUT_FILL_X|LAYOUT_FILL_Y)),
@@ -121,7 +121,7 @@
 
 	}
 
-	CLevelMeter::~CLevelMeter()
+	~CLevelMeter()
 	{
 		delete statusFont;
 	}
@@ -133,7 +133,7 @@
 		setHeight(max(statusFont->getFontHeight(),MIN_METER_HEIGHT)); // make meter only as tall as necessary (also with a defined minimum)
 	}
 
-	long CLevelMeter::onCanvasPaint(FXObject *sender,FXSelector sel,void *ptr)
+	long onCanvasPaint(FXObject *sender,FXSelector sel,void *ptr)
 	{
 		FXDCWindow dc(canvas);
 
@@ -327,7 +327,7 @@
 {
 	FXDECLARE(CBalanceMeter);
 public:
-	CBalanceMeter::CBalanceMeter(FXComposite *parent) :
+	CBalanceMeter(FXComposite *parent) :
 		FXHorizontalFrame(parent,LAYOUT_FILL_X|LAYOUT_FIX_HEIGHT | FRAME_NONE, 0,0,0,0, 0,0,0,0, 0,0),
 		statusFont(getApp()->getNormalFont()),
 		leftLabel(new FXLabel(this,"-1.0")),
@@ -361,7 +361,7 @@
 
 	}
 
-	CBalanceMeter::~CBalanceMeter()
+	~CBalanceMeter()
 	{
 		delete statusFont;
 	}
@@ -372,7 +372,7 @@
 		setHeight(max(statusFont->getFontHeight(),MIN_METER_HEIGHT)); // make meter only as tall as necessary (also with a defined minimum)
 	}
 
-	long CBalanceMeter::onCanvasPaint(FXObject *sender,FXSelector sel,void *ptr)
+	long onCanvasPaint(FXObject *sender,FXSelector sel,void *ptr)
 	{
 		FXDCWindow dc(canvas);
 
@@ -478,7 +478,7 @@
 {
 	FXDECLARE(CStereoPhaseMeter);
 public:
-	CStereoPhaseMeter::CStereoPhaseMeter(FXComposite *parent,sample_t *_samplingBuffer,size_t _samplingNFrames,unsigned _samplingNChannels,unsigned _samplingLeftChannel,unsigned _samplingRightChannel) :
+	CStereoPhaseMeter(FXComposite *parent,sample_t *_samplingBuffer,size_t _samplingNFrames,unsigned _samplingNChannels,unsigned _samplingLeftChannel,unsigned _samplingRightChannel) :
 		FXHorizontalFrame(parent,LAYOUT_RIGHT|LAYOUT_FIX_WIDTH|LAYOUT_FILL_Y, 0,0,0,0, 0,0,0,0, 0,0),
 		canvasFrame(new FXVerticalFrame(this,LAYOUT_FILL_X|LAYOUT_FILL_Y|FRAME_SUNKEN|FRAME_THICK,0,0,0,0, 2,2,2,2, 0,1)),
 			canvas(new FXBackBufferedCanvas(canvasFrame,this,ID_CANVAS,LAYOUT_FILL_X|LAYOUT_FILL_Y)),
@@ -519,19 +519,19 @@
 		statusFont=new FXFont(getApp(),d);
 	}
 
-	CStereoPhaseMeter::~CStereoPhaseMeter()
+	~CStereoPhaseMeter()
 	{
 		delete statusFont;
 	}
 
-	long CStereoPhaseMeter::onZoomDial(FXObject *sender,FXSelector sel,void *ptr)
+	long onZoomDial(FXObject *sender,FXSelector sel,void *ptr)
 	{
 		zoom=((float)zoomDial->getValue())/100.0f;
 		canvas->update(); // not really necessary since we're doing it several times a second anyway
 		return 1;
 	}
 
-	long CStereoPhaseMeter::onResize(FXObject *sender,FXSelector sel,void *ptr)
+	long onResize(FXObject *sender,FXSelector sel,void *ptr)
 	{
 		// make square
 		resize(getHeight()+getHSpacing()+zoomDial->getWidth(),getHeight());
@@ -540,7 +540,7 @@
 		return 1;
 	}
 
-	long CStereoPhaseMeter::onCanvasPaint(FXObject *sender,FXSelector sel,void *ptr)
+	long onCanvasPaint(FXObject *sender,FXSelector sel,void *ptr)
 	{
 		FXColor *data=(FXColor *)canvas->getBackBufferData();
 
@@ -730,7 +730,7 @@
 {
 	FXDECLARE(CAnalyzer);
 public:
-	CAnalyzer::CAnalyzer(FXComposite *parent) :
+	CAnalyzer(FXComposite *parent) :
 		FXHorizontalFrame(parent,LAYOUT_RIGHT|LAYOUT_FILL_Y, 0,0,0,0, 0,0,0,0, 0,0),
 		canvasFrame(new FXVerticalFrame(this,LAYOUT_FIX_WIDTH|LAYOUT_FILL_Y|FRAME_SUNKEN|FRAME_THICK,0,0,0,0, 2,2,2,2, 0,1)),
 			canvas(new FXBackBufferedCanvas(canvasFrame,this,ID_CANVAS,LAYOUT_FILL_X|LAYOUT_FILL_Y)),
@@ -763,25 +763,25 @@
 		canvasFrame->setWidth(150);
 	}
 
-	CAnalyzer::~CAnalyzer()
+	~CAnalyzer()
 	{
 		delete statusFont;
 	}
 
-	long CAnalyzer::onZoomDial(FXObject *sender,FXSelector sel,void *ptr)
+	long onZoomDial(FXObject *sender,FXSelector sel,void *ptr)
 	{
 		zoom=zoomDial->getValue();
 		canvas->update(); // not really necessary since we're doing it several times a second anyway
 		return 1;
 	}
 
-	long CAnalyzer::onZoomDialDefault(FXObject *sender,FXSelector sel,void *ptr)
+	long onZoomDialDefault(FXObject *sender,FXSelector sel,void *ptr)
 	{
 		zoomDial->setValue(25);
 		return onZoomDial(sender,sel,ptr);
 	}
 
-	long CAnalyzer::onCanvasPaint(FXObject *sender,FXSelector sel,void *ptr)
+	long onCanvasPaint(FXObject *sender,FXSelector sel,void *ptr)
 	{
 		FXDC &dc=*((FXDC*)ptr); // back buffered canvases send the DC to draw onto in ptr
 
@@ -865,19 +865,19 @@
 		return 1;
 	}
 
-	long CAnalyzer::onCanvasEnter(FXObject *sender,FXSelector sel,void *ptr)
+	long onCanvasEnter(FXObject *sender,FXSelector sel,void *ptr)
 	{
 		drawBarFreq=true;
 		return onCanvasMotion(sender,sel,ptr);
 	}
 
-	long CAnalyzer::onCanvasLeave(FXObject *sender,FXSelector sel,void *ptr)
+	long onCanvasLeave(FXObject *sender,FXSelector sel,void *ptr)
 	{
 		drawBarFreq=false;
 		return onCanvasMotion(sender,sel,ptr);
 	}
 
-	long CAnalyzer::onCanvasMotion(FXObject *sender,FXSelector sel,void *ptr)
+	long onCanvasMotion(FXObject *sender,FXSelector sel,void *ptr)
 	{
 		barFreqIndex=((FXEvent *)ptr)->win_x/ANALYZER_BAR_WIDTH;
 		return 1;
--- rezound-0.12.2beta/src/frontend_fox/FXRezWaveView.cpp.orig	2005-02-15 06:11:54.000000000 +0100
+++ rezound-0.12.2beta/src/frontend_fox/FXRezWaveView.cpp	2006-12-31 01:39:11.665272305 +0100
@@ -48,7 +48,7 @@
 
 	virtual void create();
 
-	virtual FXbool canFocus() const;
+	virtual bool canFocus() const;
 
 
 	size_t getClickedCue(FXint x,FXint y);
@@ -369,7 +369,7 @@
 	font->create();
 }
 
-FXbool FXWaveRuler::canFocus() const
+bool FXWaveRuler::canFocus() const
 {
 	return 1;
 }
--- rezound-0.12.2beta/src/frontend_fox/FilterActionDialogs.cpp.orig	2006-12-31 01:27:24.640981287 +0100
+++ rezound-0.12.2beta/src/frontend_fox/FilterActionDialogs.cpp	2006-12-31 01:29:41.988808293 +0100
@@ -205,7 +205,7 @@
 
 	virtual ~CActionParamMapper_arbitraryFIRFilter_kernelLength() {}
 
-#ifdef HAVE_LIBFFTW
+#ifdef HAVE_LIBRFFTW
 	double interpretValue(const double x)
 	{
 		if(goodFilterKernelSizes.size()<=0) // first time
--- rezound-0.12.2beta/src/frontend_fox/FXGraphParamValue.cpp.orig	2005-02-28 04:55:52.000000000 +0100
+++ rezound-0.12.2beta/src/frontend_fox/FXGraphParamValue.cpp	2006-12-31 05:07:44.602343951 +0100
@@ -1116,6 +1116,21 @@
 	graphCanvas->update();
 }
 
+/* copied from anytype.h - gcc 4.1.0 can't handle this kind of specialization(?) */
+template<> static const string anytype_to_string<vector<double> >(const vector<double> &any)
+{
+	string s;
+	size_t l=any.size();
+	s="{";
+	for(size_t t=0;t<l;t++)
+	{
+		s+=anytype_to_string(any[t]);
+		if(t!=(l-1))
+				s+=",";
+	}
+	return s+"}";
+}
+
 void FXGraphParamValue::writeToFile(const string &prefix,CNestedDataFile *f) const
 {
 	const string key=prefix DOT getName();
--- rezound-0.12.2beta/src/frontend_fox/CActionParamDialog.cpp.orig	2005-02-09 09:17:36.000000000 +0100
+++ rezound-0.12.2beta/src/frontend_fox/CActionParamDialog.cpp	2006-12-31 05:17:57.889293183 +0100
@@ -507,6 +507,21 @@
 	parameters[index].second->getParent()->recalc();
 }
 
+/* copied from anytype.h - gcc 4.1.0 can't handle this kind of specialization(?) */
+template<> static const string anytype_to_string<vector<CGraphParamValueNode> >(const vector<CGraphParamValueNode> &any)
+{
+	string s;
+	size_t l=any.size();
+	s="{";
+	for(size_t t=0;t<l;t++)
+	{
+		s+=anytype_to_string(any[t]);
+		if(t!=(l-1))
+				s+=",";
+	}
+	return s+"}";
+}
+
 bool CActionParamDialog::show(CActionSound *actionSound,CActionParameters *actionParameters)
 {
 	bool retval=false;
@@ -772,6 +787,21 @@
 	return 1;
 }
 
+/* copied from anytype.h - gcc 4.1.0 can't handle this kind of specialization(?) */
+template<> static const string anytype_to_string<vector<string> >(const vector<string> &any)
+{
+	string s;
+	size_t l=any.size();
+	s="{";
+	for(size_t t=0;t<l;t++)
+	{
+		s+=anytype_to_string(any[t]);
+		if(t!=(l-1))
+				s+=",";
+	}
+	return s+"}";
+}
+
 long CActionParamDialog::onPresetSaveButton(FXObject *sender,FXSelector sel,void *ptr)
 {
 	FXString _name=userPresetList->getCurrentItem()>=0 ? (userPresetList->getItemText(userPresetList->getCurrentItem())).mid(4,255) : "";
